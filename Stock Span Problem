    vector<int> calculateSpan(int price[], int n)
    {
        // Your code here
        vector<int> ans;
        stack<int> st;
        st.push(0);      //base case
        ans.push_back(1);    //base case
        for(int i=1 ; i<n ; i++)
        {
            while(!st.empty() and price[st.top()]<=price[i])    // popping element until a greater element in stack appear or get empty
            {
                st.pop();
            }
            int span = (st.empty() ? i+1 : i-st.top());    // Calculate span
            ans.push_back(span);  
            st.push(i);     // Pushing the curr element index
        }
        return ans;
    }
    
    Time Complexity  : O(n)
    Space Complexity : O(n)
