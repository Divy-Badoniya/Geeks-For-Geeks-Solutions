    void merge(int arr[], int l, int m, int r)
    {
        // Your code here
        int *temp=new int[r-l+1];
        int i=l, j=m+1, k=0;
        while(i<=m && j<=r)
        {
            if(arr[i]>arr[j])
            {
                temp[k++]=arr[j++];
            }
            else
            {
                temp[k++]=arr[i++];
            }
        }
        while(i<=m) temp[k++]=arr[i++];
        while(j<=r) temp[k++]=arr[j++];
        for(i=0, j=l ; i<=r-l ; j++, i++)
            arr[j]=temp[i];
    }
    void mergeSort(int arr[], int l, int r)
    {
        //code here
        if(r==l)
            return;
        int m = (l+r)/2;
        mergeSort(arr, l, m);
        mergeSort(arr, m+1, r);
        merge(arr, l, m, r);
    }
    
    Time Complexity  : O(n*log(n))
    Space Complexity : O(n)
